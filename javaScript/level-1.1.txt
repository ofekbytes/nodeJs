.
.
Java Script - 
.
.
- level 1: Java Script information


.
.
- level 1: Java Script information
.

-- Javascript next generation feature
--- rest
--- spread operator
--- object destructuring

-- Java Script is 
--- weakly Typed Language 
--- Object Oriented Language
--- Versatile Language

.
.
level 2: basic variable
.

--- example: variable

    var fName='jron';
    console.log(fName)


-- scope - JavaScript has two scopes â€“ global and local. 

--- global scope - 
    Any variable declared outside of a function belongs to the global scope, 
    and is therefore accessible from anywhere in your code. 

--- local scope - 
    Each function has its own scope, and any variable declared within that function 
    is only accessible from that function and any nested functions.

--- example: local/global scope

    //global scope
    var fName = 'Jron';
    var age = 45;
    var haveBusTicket = true;

    // function call with argument
    console.log(fnPrintUserInformation(fName, age, haveBusTicket));

    // function with argument and return value
    function fnPrintUserInformation(name, age, busTicket) {
        //local scope
        return "Name is " + name + ", Age is " + age + ", busTickets" + busTicket;
    }

-- var is a keyword that create a variable (outdate syntax)
-- let is a keyword that create a variable (scope of the "let" is defferent fron "var" variable)
-- const is a keyword that create a variable that assigned once at declaration time 
   and never changed (can't be assigned again)

.
.
level 3: function
.

-- function with argument

--- example: function with argument

    function fnPrintUserInformation(name, age, busTicket) 
    {
        return "Name is " + name + ", Age is " + age + ", busTickets" + busTicket;
    }

--- example: function with argument
    <javaScript-01.04.01.function-anonymous.js>



-- function - anonymous function

--- example: anonymous function set from variable const "summarizeUser"

    const fnPrintUserInformation = function (name, age, busTicket) 
    {
        return "Name is " + name + ", Age is " + age + ", busTickets" + busTicket;
    }


--- example: anonymous function set from variable const "summarizeUser"
   <javaScript-01.04.02.function-anonymous.js>



-- function - 
   anonymous function with 
   arrow sign "=>"
   "this" sign

--- example:  anonymous function with Arrow Functions  "=>"

    // function with "this" keyboard -and- Arrow Function handling
    const fnPrintUserInformation = (name, age, busTicket) =>
    {
        console.log("Name is " + this.fName);
        return "Name is " + name + ", Age is " + age + ", busTickets" + busTicket;
    }


--- example:  anonymous function with Arrow Functions "=>"
    <javaScript-01.04.03.function-Arrow.js>



-- short function

--- example: Arrow Functions

--- example: Arrow Functions
    <javaScript-01.04.04.functions-Arrow-short.js>

.
.
level 4: objects-properties-methods
.

- object - 

-- object is ........


--- example:  object - key:value pairs

    //
    // object - key:value pairs
    // 
    const person = {
        name: 'jron',
        age: 45,
    };

    console.log(person);

    // output:
    // { name: 'jron', age: 45 }


--- example: object with function (arrow function / anonymous function)

    const personWithFunctionBug1 = {
        name: 'shalom',
        age: 22,

        //anonymous function with "arrow" function
        greet: () => {
            console.log('hello ' + this.name + ' ,how are you today ? ');
        }
    };

    // output:
    // "hello undefined ,how are you today ? "

-!- "personWithFunctionBug1" object contain:
    "this" is not refer to the global scope, 
    "this"  refer to the global node runtime scope.
    and not to the object "personWithFunctionBug1".


--- example: call function within an object

    personWithFunctionBug1.greet();

    // fixing the bug - ("Arrow" Function)
    // function instead of "arrow" function 
    const personWithFunctionFixBog = {
        name: 'shalom',
        age: 22,
        greet: function () {
            console.log('hello ' + this.name + ' ,how are you today ? ');
        }
    };

    personWithFunctionFixBog.greet();

    // output: 
    // hello shalom ,how are you today ?


--- example: call function within an object (without "function()" keyword)

    const personWithFunctionMethod = {
        name: 'shalom',
        age: 22,
        greet() {
            console.log('hello ' + this.name + ' ,without function/method keyword ? ');
        }
    };

    personWithFunctionMethod.greet();

    // output:
    // hello shalom ,without function/method keyword ? 






--- example: object, properties, variable, methods, function
    <javaScript-01.05.01.objects-properties-methods.js>







---rtfm---
- Arrow Functions
anonymous function
java script object

// "this" keyword + Arrow Functions //
https://academind.com/learn/javascript/this-keyword-function-references/
----------------------







